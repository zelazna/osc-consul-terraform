# This file was autogenerated by the 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/templates/hcl_templates/variables#type-constraints for more info.
variable "access_key" {
  type    = string
}

variable "secret_key" {
  type    = string
}

# "timestamp" template function replacement
locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/source
source "osc-bsu" "nomad_vm" {
  access_key = "${var.access_key}"
  omi_name   = "consul_stack ${local.timestamp}"
  region     = "eu-west-2"
  secret_key = "${var.secret_key}"
  source_omi = "ami-538af795"
  ssh_username = "outscale"
  vm_type      = "t2.medium"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/templates/hcl_templates/blocks/build
build {
  sources = ["source.osc-bsu.nomad_vm"]

  provisioner "shell" {
    inline = ["sudo mkdir /ops", "sudo chmod 777 /ops"]
  }

  provisioner "file" {
    destination = "/ops/config"
    source      = "config"
  }

  provisioner "file" {
    destination = "/ops/scripts"
    source      = "scripts"
  }

  provisioner "file" {
    destination = "/ops/install"
    source      = "install"
  }

  provisioner "shell" {
    script = "install/setup.sh"
  }
}
